
buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:${rootProject.ext.buildConfiguration.gradleBuildPluginVersion}"
//        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
//        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${rootProject.ext.buildConfiguration.kotlinVersion}"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
//apply plugin: 'com.neenbedankt.android-apt'
//apply plugin: 'com.github.dcendents.android-maven'

def configuration = rootProject.ext.configuration;
def libraries = rootProject.ext.libraries;

//group='com.github.Hazer'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }
    lintOptions {
        warning 'InvalidPackage'
    }
}

repositories {
    jcenter()
    maven {url "https://clojars.org/repo/"}
    mavenCentral()
    maven { url "https://jitpack.io" }
}

kapt {
    generateStubs = true
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile ('junit:junit:4.12') {
        exclude group: 'org.json', module: 'json'
    }
    compile 'com.android.support:multidex:1.0.1'
    compile "com.android.support:appcompat-v7:${libraries.supportVersion}"
    compile "com.android.support:design:${libraries.supportVersion}"
    compile "com.android.support:support-v4:${libraries.supportVersion}"
    compile "com.android.support:percent:${libraries.supportVersion}"
    compile "com.android.support:recyclerview-v7:${libraries.supportVersion}"
    compile "com.android.support:customtabs:${libraries.supportVersion}"

    compile "org.jetbrains.anko:anko-sdk23:${libraries.ankoVersion}"
    compile "org.jetbrains.anko:anko-support-v4:${libraries.ankoVersion}"
    compile "org.jetbrains.anko:anko-appcompat-v7:${libraries.ankoVersion}"

    compile 'nl.komponents.kovenant:kovenant:3.2.2'
    compile 'nl.komponents.kovenant:kovenant-android:3.2.2'

    compile 'com.facebook.stetho:stetho:1.3.1'
    compile 'com.facebook.stetho:stetho-okhttp3:1.3.1'

//    compile 'commons-validator:commons-validator:1.5.0'

    compile 'com.j256.ormlite:ormlite-android:4.48'

    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.github.bumptech.glide:okhttp3-integration:1.5.0-SNAPSHOT'

    compile "com.squareup.okhttp3:okhttp:${libraries.okhttp3Version}"
    compile 'com.github.mrmike:ok2curl:0.2.2'

    compile 'jp.wasabeef:glide-transformations:1.3.1'

    compile 'com.github.orhanobut:logger:1.12'

//    compile project (':assent')
    compile('com.github.afollestad:assent:0.2.2') {
        transitive = true
    }

    compile 'de.halfbit:tinybus:3.0.2'
    compile 'de.halfbit:tinybus-extensions:3.0.2'

    compile 'com.github.pwittchen.kirai:library:1.4.1'

    compile "frankiesardo:icepick:3.1.0"
    provided "frankiesardo:icepick-processor:3.1.0"

//    compile 'com.mounacheikhna:decor:0.2.4'
//    compile 'com.mounacheikhna:decorators:0.2.4'
//    compile 'com.vanniktech:onactivityresult:0.1.0'
//    apt 'com.vanniktech:onactivityresult-compiler:0.1.0'

    compile 'com.hannesdorfmann.fragmentargs:annotation:3.0.0'
    kapt 'com.hannesdorfmann.fragmentargs:processor:3.0.0'

//    compile 'se.emilsjolander:intentbuilder-api:0.14.0'
//    kapt 'se.emilsjolander:intentbuilder-compiler:0.14.0'

    compile "org.jetbrains.kotlin:kotlin-stdlib:${rootProject.ext.buildConfiguration.kotlinVersion}"
//    compile "org.jetbrains.kotlin:kotlin-reflect:${rootProject.ext.buildConfiguration.kotlinVersion}"
//    compile 'org.jetbrains.kotlinx:kotlinx.reflect.lite:1.0.0'
    compile "com.google.code.gson:gson:${libraries.gsonVersion}"

//    compile 'com.github.Hazer:Raven-Android:0.1.6'
    compile project(":sentry")
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
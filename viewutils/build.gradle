buildscript {
    repositories { jcenter() }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'maven-publish'

def VERSION_NAME = rootProject.ext.VERSION_NAME
def GROUP = rootProject.ext.GROUP
def POM_ARTIFACT_ID = project.name

configurations {
    javadocDeps
}

kapt {
    generateStubs = true
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'

    compile project(':core')
    compile project(':extensions')

    compile "com.android.support:appcompat-v7:${libraries.supportVersion}"
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    compile "com.android.support:support-v4:${libraries.supportVersion}"
    compile "com.android.support:percent:${libraries.supportVersion}"

    compile "org.jetbrains.anko:anko-sdk23:${libraries.ankoVersion}"
    compile "org.jetbrains.anko:anko-support-v4:${libraries.ankoVersion}"
    compile "org.jetbrains.anko:anko-appcompat-v7:${libraries.ankoVersion}"

    compile 'de.halfbit:tinybus:3.0.2'
    compile 'de.halfbit:tinybus-extensions:3.0.2'
}


task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.javadocDeps
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

afterEvaluate {
    publishing.repositories {
        maven {
            url "s3://guizion-artfactory/"
            credentials(AwsCredentials) {
                accessKey "${guizion_aws_accessid}"
                secretKey "${guizion_aws_accesskey}"
            }
        }
    }

    publishing.publications {
        viewutils(MavenPublication) {
            //The publication doesn't know about our dependencies, so we have to manually add them to the pom
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.compile.allDependencies.each {
                    if (it.group != null && it.name != null) {
                        def depGroup = it.group
                        def depVersion = it.version
                        if (depGroup.equalsIgnoreCase(rootProject.name)) {
                            depGroup = GROUP
                            depVersion = VERSION_NAME
                        }
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', depGroup)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', depVersion)
                    }
                }
            }

            artifactId = POM_ARTIFACT_ID
            groupId = GROUP
            version = VERSION_NAME
            artifact "${project.buildDir}/outputs/aar/${project.name}-release.aar"
        }
    }
}